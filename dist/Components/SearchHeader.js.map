{"version":3,"sources":["../../src/Components/SearchHeader.js"],"names":["SearchHeader","props","state","searchText","_getDefaultStyles","bind","_onSearchChanged","_getHeaderProps","setState","onSearch","placeholder","styles","searchInput","foregroundColor","foreground","ios","fontSize","color","flex","propTypes","func","string"],"mappings":"uxBAAA,4B;AACA;AACA,4D;AACA,oC;AACA,gC;AACA,oC;;;AAGMA,Y;;;;;;;AAOF,sBAAYC,KAAZ,CAAmB;AACTA,KADS;;AAGf,MAAKC,KAAL,CAAa;AACTC,WAAY,EADH,CAAb;;;AAIA,MAAKC,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AACA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,OAAxB;AACA,MAAKE,eAAL,CAAuB,MAAKA,eAAL,CAAqBF,IAArB,OAAvB,CATe;AAUlB,C;;AAEgBF,U,CAAY;AACzB,KAAKK,QAAL,CAAc,CAAEL,qBAAF,CAAd;;AAEA,GAAI,KAAKF,KAAL,CAAWQ,QAAf,CAAyB;AACrB,KAAKR,KAAL,CAAWQ,QAAX,CAAoBN,UAApB;AACH;AACJ,C;;;AAGiB;AACd,GAAIF,OAAQ,qBAAM,EAAN,CAAU,KAAKA,KAAf,CAAZ;;AAEA,GAAIA,MAAMQ,QAAV,CAAoB;AAChB,MAAOR,OAAMQ,QAAb;AACH;;AAED,GAAIR,MAAMS,WAAV,CAAuB;AACnB,MAAOT,OAAMS,WAAb;AACH;;AAED,MAAOT,MAAP;AACH,C;;AAEQ;AACL,GAAMS,aAAc,KAAKT,KAAL,CAAWS,WAAX,CAAyB,KAAKT,KAAL,CAAWS,WAApC,CAAkD,QAAtE;AACA,GAAMC,QAAS,KAAKP,iBAAL,EAAf;AACA,GAAMH,OAAQ,KAAKM,eAAL,EAAd;;AAEA;AACI,+CAAYN,KAAZ;AACI;AACI,cAAc,QADlB;AAEI,MAAOU,OAAOC,WAFlB;AAGI,UAAW,IAHf;AAII,YAAaF,WAJjB;AAKI,aAAc,KAAKJ,gBALvB;AAMI,MAAO,KAAKJ,KAAL,CAAWC,UANtB,EADJ,CADJ;;;AAWH,C;;AAEmB;;AAERU,eAFQ,CAEY,KAAKZ,KAFjB,CAERY,eAFQ;AAGhB,GAAMC,YAAaD,gBAAkBA,eAAlB,CAAoC,mBAASE,GAAT,CAAe,OAAf,CAAyB,OAAhF;;AAEA,MAAO;AACHH,YAAa;AACTI,SAAU,EADD;AAETC,MAAOH,UAFE;AAGTI,KAAM,CAHG,CADV,CAAP;;;;AAQH,C,4CAzEClB,Y,CAEKmB,S,CAAY,SAAc,EAAd,CAAkB,iBAAOA,SAAzB,CAAoC,CACnDV,SAAU,iBAAUW,IAD+B,CAEnDV,YAAa,iBAAUW,MAF4B,CAApC,C;AAwEtB,C;;;;AAIcrB,Y","file":"SearchHeader.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput } from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport Platform from './Platform';\nimport Header from './Header';\nimport merge from 'lodash.merge';\n\n\nclass SearchHeader extends Component {\n\n    static propTypes = Object.assign({}, Header.propTypes, {\n        onSearch: PropTypes.func,\n        placeholder: PropTypes.string,\n    });\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchText: ''\n        };\n\n        this._getDefaultStyles = this._getDefaultStyles.bind(this);\n        this._onSearchChanged = this._onSearchChanged.bind(this);\n        this._getHeaderProps = this._getHeaderProps.bind(this);\n    }\n\n    _onSearchChanged(searchText) {\n        this.setState({ searchText });\n\n        if (this.props.onSearch) {\n            this.props.onSearch(searchText);\n        }\n    }\n\n\n    _getHeaderProps() {\n        let props = merge({}, this.props);\n\n        if (props.onSearch) {\n            delete props.onSearch;\n        }\n\n        if (props.placeholder) {\n            delete props.placeholder;\n        }\n\n        return props;\n    }\n\n    render() {\n        const placeholder = this.props.placeholder ? this.props.placeholder : 'Search';\n        const styles = this._getDefaultStyles();\n        const props = this._getHeaderProps();\n\n        return (\n            <Header {...props}>\n                <TextInput\n                    returnKeyType='search'\n                    style={styles.searchInput}\n                    autoFocus={true}\n                    placeholder={placeholder}\n                    onChangeText={this._onSearchChanged}\n                    value={this.state.searchText} />\n            </Header>\n        );\n    }\n\n    _getDefaultStyles() {\n\n        const { foregroundColor } = this.props;\n        const foreground = foregroundColor ? foregroundColor : Platform.ios ? 'black' : 'white';\n\n        return {\n            searchInput: {\n                fontSize: 16,\n                color: foreground,\n                flex: 1,\n                // backgroundColor:'red',\n            }\n        };\n    }\n};\n\n\n\nexport default SearchHeader;\n"]}