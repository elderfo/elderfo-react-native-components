{"version":3,"sources":["../../src/Components/Card.js"],"names":["defaultStyles","card","marginVertical","padding","borderWidth","borderRadius","borderColor","flexWrap","borderBottomWidth","backgroundColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","Card","children","style","center","includePadding","onPress","centerCardStyle","alignItems","defaultStyle","styles","create","innerCard","_onPress","propTypes","object","bool","func"],"mappings":"yRAAA,4B;AACA,yC;;AAEA,GAAMA,eAAgB;AACpBC,KAAM;AACJC,eAAgB,CADZ;AAEJC,QAAS,EAFL;AAGJC,YAAa,CAHT;AAIJC,aAAc,CAJV;AAKJC,YAAa,MALT;AAMJC,SAAU,MANN;AAOJC,kBAAmB,CAPf;AAQJC,gBAAiB,MARb;AASJC,YAAa,MATT;AAUJC,aAAc,CAAEC,MAAO,CAAT,CAAYC,OAAQ,CAApB,CAVV;AAWJC,cAAe,GAXX;AAYJC,aAAc,GAZV;AAaJC,UAAW,CAbP,CADc,CAAtB;;;;AAkBA,GAAMC,MAAO,QAAPA,KAAO,MAA4E,IAA1EC,SAA0E,MAA1EA,QAA0E,iBAAhEC,KAAgE,CAAhEA,KAAgE,wBAAxD,EAAwD,6BAApDC,MAAoD,CAApDA,MAAoD,yBAA3C,KAA2C,sCAApCC,cAAoC,CAApCA,cAAoC,iCAAnB,IAAmB,qBAAbC,OAAa,MAAbA,OAAa;AACvF,GAAMC,iBAAkBH,OAAS,CAAEI,WAAY,QAAd,CAAT,CAAoC,EAA5D;;AAEA,GAAMC,cAAe,SAAc,EAAd,CAAkBzB,cAAcC,IAAhC,CAAsCsB,eAAtC,CAAuDJ,KAAvD,CAArB;;AAEA,GAAI,CAACE,cAAL,CAAqB;AACnB,MAAOI,cAAatB,OAApB;AACD;;AAED,GAAMuB,QAAS,wBAAWC,MAAX,CAAkB;AAC/B1B,KAAMwB,YADyB;AAE/BG,UAAWR,OAAS,CAAEI,WAAY,QAAd,CAAT,CAAoC,EAFhB,CAAlB,CAAf;;;AAKA,GAAMK,UAAW,QAAXA,SAAW,EAAM;AACrB,GAAIP,OAAJ,CAAa;AACXA;AACD;AACF,CAJD;;AAMA,GAAMrB;AACJ,iDAAM,MAAOyB,OAAOzB,IAApB;AACE,iDAAM,MAAOyB,OAAOE,SAApB;AACGV,QADH,CADF,CADF;;;;;AAQA,GAAII,OAAJ,CAAa;AACX;AACE,+DAAoB,QAASO,QAA7B,CAAuC,cAAe,aAAtD;AACG5B,IADH,CADF;;;AAKD,CAND,IAMO;AACL,MAAOA,KAAP;AACD;;AAEF,CAtCD;;AAwCAgB,KAAKa,SAAL,CAAiB;AACfX,MAAO,iBAAUY,MADF;AAEfX,OAAQ,iBAAUY,IAFH;AAGfX,eAAgB,iBAAUW,IAHX;AAIfV,QAAS,iBAAUW,IAJJ,CAAjB,C;;;AAOehB,I","file":"Card.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { StyleSheet, View, TouchableHighlight } from 'react-native';\n\nconst defaultStyles = {\n  card: {\n    marginVertical: 5,\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: '#ddd',\n    flexWrap: 'wrap',\n    borderBottomWidth: 0,\n    backgroundColor: '#fff',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1.5,\n    elevation: 2\n  },\n}\n\nconst Card = ({children, style = {}, center = false, includePadding = true, onPress}) => {\n  const centerCardStyle = center ? { alignItems: 'center' } : {};\n\n  const defaultStyle = Object.assign({}, defaultStyles.card, centerCardStyle, style);\n\n  if (!includePadding) {\n    delete defaultStyle.padding;\n  }\n\n  const styles = StyleSheet.create({\n    card: defaultStyle,\n    innerCard: center ? { alignItems: 'center' } : {}\n  });\n\n  const _onPress = () => {\n    if (onPress) {\n      onPress();\n    }\n  };\n\n  const card = (\n    <View style={styles.card}>\n      <View style={styles.innerCard}>\n        {children}\n      </View>\n    </View>\n  );\n\n  if (onPress) {\n    return (\n      <TouchableHighlight onPress={_onPress} underlayColor={'transparent'}>\n        {card}\n      </TouchableHighlight>\n    );\n  } else {\n    return card;\n  }\n\n}\n\nCard.propTypes = {\n  style: PropTypes.object,\n  center: PropTypes.bool,\n  includePadding: PropTypes.bool,\n  onPress: PropTypes.func\n}\n\nexport default Card;\n"]}