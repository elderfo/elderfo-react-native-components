{"version":3,"sources":["../../src/Components/Container.js"],"names":["headerTypes","getHeader","children","Array","isArray","find","item","includes","type","hasHeader","renderContent","styleSheet","content","filter","generateStyleSheet","style","contentStyle","defaultStyle","container","flex","paddingTop","ios","padding","scroll","computedStyle","create","Container","props","propTypes","object","bool"],"mappings":"yDAAA,4B;AACA;AACA,gC;AACA,4C;AACA,oC;AACA,6B;;AAEA,GAAMA,aAAc,yCAApB;;;;;AAKA,GAAMC,WAAY,QAAZA,UAAY,CAACC,QAAD,CAAc;AAC9B,GAAIC,MAAMC,OAAN,CAAcF,QAAd,CAAJ,CAA6B;AAC3B,MAAOA,UAASG,IAAT,CAAc,qBAAQC,OAAQN,YAAYO,QAAZ,CAAqBD,KAAKE,IAA1B,CAAhB,EAAd,CAAP;AACD,CAFD,IAEO,IAAIN,UAAYF,YAAYO,QAAZ,CAAqBL,SAASM,IAA9B,CAAhB,CAAqD;AAC1D,MAAON,SAAP;AACD;AACF,CAND;;AAQA,GAAMO,WAAY,QAAZA,UAAY,UAAY;AAC5B,MAAOR,WAAUC,QAAV,CAAP;AACD,CAFD;;AAIA,GAAMQ,eAAgB,QAAhBA,cAAgB,CAACR,QAAD,CAAWS,UAAX,CAA0B;AAC9C,GAAI,CAACT,QAAL,CAAe;AACb;AACD;;AAED,GAAIC,MAAMC,OAAN,CAAcF,QAAd,CAAJ,CAA6B;AAC3B;AACE,iDAAM,MAAOS,WAAWC,OAAxB;AACGV,SAASW,MAAT,CAAgB,qBAAQP,OAAQ,CAACN,YAAYO,QAAZ,CAAqBD,KAAKE,IAA1B,CAAjB,EAAhB,CADH,CADF;;;AAKD,CAND,IAMO,IAAIN,UAAY,CAACF,YAAYO,QAAZ,CAAqBL,SAASM,IAA9B,CAAjB,CAAsD;AAC3D;AACE,iDAAM,MAAOG,WAAWC,OAAxB;AACGV,QADH,CADF;;;AAKD;AACF,CAlBD;;AAoBA,GAAMY,oBAAqB,QAArBA,mBAAqB,MAAqC,IAAnCC,MAAmC,MAAnCA,KAAmC,CAA5BC,YAA4B,MAA5BA,YAA4B,CAAdd,QAAc,MAAdA,QAAc;;AAE9D,GAAIe,cAAe;AACjBC,UAAW;AACTC,KAAM,CADG;AAETC,WAAYX,UAAUP,QAAV,EAAsB,CAAtB,CAA0B,mBAASmB,GAAT,CAAe,EAAf,CAAoB,CAFjD,CADM;;AAKjBT,QAAS;AACPO,KAAM,CADC;AAEPG,QAAS,EAFF,CALQ;;AASjBC,OAAQ;AACNJ,KAAM,CADA,CATS,CAAnB;;;;AAcA,GAAMK,eAAgB,uBAAaP,YAAb,CAA2B;AAC/CC,UAAWH,KADoC;AAE/CH,QAASI,YAFsC,CAA3B,CAAtB;;;AAKA,MAAO,yBAAWS,MAAX,CAAkBD,aAAlB,CAAP;AACD,CAtBD;;;AAyBA,GAAME,WAAY,QAAZA,UAAY,CAACC,KAAD,CAAW;;AAE3B,GAAMhB,YAAaG,mBAAmBa,KAAnB,CAAnB;;AAEA,GAAMf,SAAUe,MAAMJ,MAAN;;AAEZ,uDAAY,MAAOZ,WAAWY,MAA9B;AACGb,cAAciB,MAAMzB,QAApB,CAA8BS,UAA9B,CADH,CAFY;;;AAMZD,cAAciB,MAAMzB,QAApB,CAA8BS,UAA9B,CANJ;;AAQA;AACE,iDAAM,MAAOA,WAAWO,SAAxB;AACGjB,UAAU0B,MAAMzB,QAAhB,CADH;AAEGU,OAFH,CADF;;;AAMD,CAlBD;;AAoBAc,UAAUE,SAAV,CAAsB;AACpBb,MAAO,iBAAUc,MADG;AAEpBb,aAAc,iBAAUa,MAFJ;AAGpBN,OAAQ,iBAAUO,IAHE,CAAtB,C;;;AAMeJ,S","file":"Container.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { View, StyleSheet, ScrollView } from 'react-native';\nimport Header from './Header';\nimport SearchHeader from './SearchHeader';\nimport Platform from './Platform';\nimport { computeStyle } from '../Util';\n\nconst headerTypes = [\n  Header,\n  SearchHeader\n];\n\nconst getHeader = (children) => {\n  if (Array.isArray(children)) {\n    return children.find(item => item && headerTypes.includes(item.type));\n  } else if (children && headerTypes.includes(children.type)) {\n    return children;\n  }\n};\n\nconst hasHeader = children => {\n  return getHeader(children);\n}\n\nconst renderContent = (children, styleSheet) => {\n  if (!children) {\n    return;\n  }\n\n  if (Array.isArray(children)) {\n    return (\n      <View style={styleSheet.content}>\n        {children.filter(item => item && !headerTypes.includes(item.type))}\n      </View>\n    );\n  } else if (children && !headerTypes.includes(children.type)) {\n    return (\n      <View style={styleSheet.content}>\n        {children}\n      </View>\n    );\n  }\n}\n\nconst generateStyleSheet = ({style, contentStyle, children}) => {\n\n  let defaultStyle = {\n    container: {\n      flex: 1,\n      paddingTop: hasHeader(children) ? 0 : Platform.ios ? 20 : 0\n    },\n    content: {\n      flex: 1,\n      padding: 10,\n    },\n    scroll: {\n      flex: 1,\n    }\n  };\n\n  const computedStyle = computeStyle(defaultStyle, {\n    container: style,\n    content: contentStyle\n  });\n\n  return StyleSheet.create(computedStyle);\n}\n\n\nconst Container = (props) => {\n\n  const styleSheet = generateStyleSheet(props);\n\n  const content = props.scroll\n    ? (\n      <ScrollView style={styleSheet.scroll}>\n        {renderContent(props.children, styleSheet)}\n      </ScrollView>\n    )\n    : renderContent(props.children, styleSheet);\n\n  return (\n    <View style={styleSheet.container}>\n      {getHeader(props.children)}\n      {content}\n    </View>\n  );\n};\n\nContainer.propTypes = {\n  style: PropTypes.object,\n  contentStyle: PropTypes.object,\n  scroll: PropTypes.bool,\n}\n\nexport default Container;\n"]}